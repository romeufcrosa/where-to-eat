version: '1.0'
steps:
  BuildingDockerImage:
    title: Building Docker Image
    type: build
    image_name: romeufcrosa/wheretoeat
    working_directory: ./
    tag: '${{CF_BRANCH_TAG_NORMALIZED}}'
    dockerfile:
      content: >-
        # ---

        # Go Builder Image

        FROM golang:1.11 AS builder

        # set build arguments: GitHub user and repository

        ARG GH_USER

        ARG GH_REPO


        # Create and set working directory

        RUN mkdir -p /go/src/github.com/${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}

        WORKDIR /go/src/github.com/${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}


        # Install dep

        RUN go get -u github.com/golang/dep/cmd/dep


        # copy sources

        COPY . .


        # Install dependencies

        RUN dep ensure


        # Run tests, skip 'vendor'

        # RUN go test -cover ./...

        RUN go test -v $(go list ./... | grep -v /vendor/)

        # Build application

        # RUN CGO_ENABLED=0 go build -v -o "dist/myapp"

        RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -o bin/api cmd/api/main.go


        # ---

        # Application Runtime Image

        FROM alpine:3.6


        # set build arguments: GitHub user and repository

        ARG GH_USER

        ARG GH_REPO


        # copy file from builder image

        COPY --from=builder /go/src/github.com/${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}/bin/api
        /usr/bin/api


        CMD ["api"]
